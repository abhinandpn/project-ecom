// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/abhinandpn/project-ecom/pkg/api"
	"github.com/abhinandpn/project-ecom/pkg/api/handler"
	"github.com/abhinandpn/project-ecom/pkg/config"
	"github.com/abhinandpn/project-ecom/pkg/db"
	"github.com/abhinandpn/project-ecom/pkg/repository"
	"github.com/abhinandpn/project-ecom/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(gormDB)
	cartrepository := repository.NewCartRepository(gormDB)
	orderRepository := repository.NewOrderRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository, cartrepository, orderRepository)
	userHandler := handler.NewUserHandler(userUseCase)
	adminRepository := repository.NewAdminRepository(gormDB)
	adminUseCase := usecase.NewAdminUseCase(adminRepository, userRepository)
	adminHandler := handler.NewAdminHandler(adminUseCase)
	productRepository := repository.NewProductRepository(gormDB)
	productuseCase := usecase.NewProductUseCase(productRepository)
	productHandler := handler.NewProductHandler(productuseCase)
	cartUseCase := usecase.NewCartUseCase(cartrepository, productRepository)
	cartHandler := handler.NewCartHandler(cartUseCase)
	orderUseCase := usecase.NewOrderUseCase(orderRepository, userRepository, productRepository)
	orderHandler := handler.NewOrderHandler(orderUseCase)
	paymentRepository := repository.NewPaymentRepository(gormDB)
	paymentuseCase := usecase.NewPaymentUseCase(paymentRepository)
	paymentHandler := handler.NewPaymentHandler(paymentuseCase)
	serverHTTP := http.NewServerHTTP(userHandler, adminHandler, productHandler, cartHandler, orderHandler, paymentHandler)
	return serverHTTP, nil
}
